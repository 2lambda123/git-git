but-fmt-merge-msg(1)
====================

NAME
----
but-fmt-merge-msg - Produce a merge cummit message


SYNOPSIS
--------
[verse]
'but fmt-merge-msg' [-m <message>] [--into-name <branch>] [--log[=<n>] | --no-log]
'but fmt-merge-msg' [-m <message>] [--log[=<n>] | --no-log] -F <file>

DESCRIPTION
-----------
Takes the list of merged objects on stdin and produces a suitable
cummit message to be used for the merge cummit, usually to be
passed as the '<merge-message>' argument of 'but merge'.

This command is intended mostly for internal use by scripts
automatically invoking 'but merge'.

OPTIONS
-------

--log[=<n>]::
	In addition to branch names, populate the log message with
	one-line descriptions from the actual cummits that are being
	merged.  At most <n> cummits from each merge parent will be
	used (20 if <n> is omitted).  This overrides the `merge.log`
	configuration variable.

--no-log::
	Do not list one-line descriptions from the actual cummits being
	merged.

--[no-]summary::
	Synonyms to --log and --no-log; these are deprecated and will be
	removed in the future.

-m <message>::
--message <message>::
	Use <message> instead of the branch names for the first line
	of the log message.  For use with `--log`.

--into-name <branch>::
	Prepare the merge message as if merging to the branch `<branch>`,
	instead of the name of the real branch to which the merge is made.

-F <file>::
--file <file>::
	Take the list of merged objects from <file> instead of
	stdin.

CONFIGURATION
-------------
include::config/fmt-merge-msg.txt[]

merge.summary::
	Synonym to `merge.log`; this is deprecated and will be removed in
	the future.

EXAMPLES
--------

---------
$ but fetch origin master
$ but fmt-merge-msg --log <$GIT_DIR/FETCH_HEAD
---------

Print a log message describing a merge of the "master" branch from
the "origin" remote.


SEE ALSO
--------
linkbut:but-merge[1]

GIT
---
Part of the linkbut:but[1] suite
