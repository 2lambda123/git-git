but-for-each-repo(1)
====================

NAME
----
but-for-each-repo - Run a Git command on a list of repositories


SYNOPSIS
--------
[verse]
'but for-each-repo' --config=<config> [--] <arguments>


DESCRIPTION
-----------
Run a Git command on a list of repositories. The arguments after the
known options or `--` indicator are used as the arguments for the Git
subprocess.

THIS COMMAND IS EXPERIMENTAL. THE BEHAVIOR MAY CHANGE.

For example, we could run maintenance on each of a list of repositories
stored in a `maintenance.repo` config variable using

-------------
but for-each-repo --config=maintenance.repo maintenance run
-------------

This will run `but -C <repo> maintenance run` for each value `<repo>`
in the multi-valued config variable `maintenance.repo`.


OPTIONS
-------
--config=<config>::
	Use the given config variable as a multi-valued list storing
	absolute path names. Iterate on that list of paths to run
	the given arguments.
+
These config values are loaded from system, global, and local Git config,
as available. If `but for-each-repo` is run in a directory that is not a
Git repository, then only the system and global config is used.


SUBPROCESS BEHAVIOR
-------------------

If any `but -C <repo> <arguments>` subprocess returns a non-zero exit code,
then the `but for-each-repo` process returns that exit code without running
more subprocesses.

Each `but -C <repo> <arguments>` subprocess inherits the standard file
descriptors `stdin`, `stdout`, and `stderr`.


BUT
---
Part of the linkbut:but[1] suite
