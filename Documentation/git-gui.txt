but-gui(1)
==========

NAME
----
but-gui - A portable graphical interface to Git

SYNOPSIS
--------
[verse]
'but gui' [<command>] [<arguments>]

DESCRIPTION
-----------
A Tcl/Tk based graphical user interface to Git.  'but gui' focuses
on allowing users to make changes to their repository by making
new cummits, amending existing ones, creating branches, performing
local merges, and fetching/pushing to remote repositories.

Unlike 'butk', 'but gui' focuses on cummit generation
and single file annotation and does not show project history.
It does however supply menu actions to start a 'butk' session from
within 'but gui'.

'but gui' is known to work on all popular UNIX systems, Mac OS X,
and Windows (under both Cygwin and MSYS).  To the extent possible
OS specific user interface guidelines are followed, making 'but gui'
a fairly native interface for users.

COMMANDS
--------
blame::
	Start a blame viewer on the specified file on the given
	version (or working directory if not specified).

browser::
	Start a tree browser showing all files in the specified
	cummit.  Files selected through the
	browser are opened in the blame viewer.

citool::
	Start 'but gui' and arrange to make exactly one cummit before
	exiting and returning to the shell.  The interface is limited
	to only cummit actions, slightly reducing the application's
	startup time and simplifying the menubar.

version::
	Display the currently running version of 'but gui'.


Examples
--------
`but gui blame Makefile`::

	Show the contents of the file 'Makefile' in the current
	working directory, and provide annotations for both the
	original author of each line, and who moved the line to its
	current location.  The uncummitted file is annotated, and
	uncummitted changes (if any) are explicitly attributed to
	'Not Yet cummitted'.

`but gui blame v0.99.8 Makefile`::

	Show the contents of 'Makefile' in revision 'v0.99.8'
	and provide annotations for each line.  Unlike the above
	example the file is read from the object database and not
	the working directory.

`but gui blame --line=100 Makefile`::

	Loads annotations as described above and automatically
	scrolls the view to center on line '100'.

`but gui citool`::

	Make one cummit and return to the shell when it is complete.
	This command returns a non-zero exit code if the window was
	closed in any way other than by making a cummit.

`but gui citool --amend`::

	Automatically enter the 'Amend Last cummit' mode of
	the interface.

`but gui citool --nocummit`::

	Behave as normal citool, but instead of making a cummit
	simply terminate with a zero exit code. It still checks
	that the index does not contain any unmerged entries, so
	you can use it as a GUI version of linkbut:but-mergetool[1]

`but citool`::

	Same as `but gui citool` (above).

`but gui browser maint`::

	Show a browser for the tree of the 'maint' branch.  Files
	selected in the browser can be viewed with the internal
	blame viewer.

SEE ALSO
--------
linkbut:butk[1]::
	The Git repository browser.  Shows branches, commit history
	and file differences.  butk is the utility started by
	'but gui''s Repository Visualize actions.

Other
-----
'but gui' is actually maintained as an independent project, but stable
versions are distributed as part of the Git suite for the convenience
of end users.

The official repository of the 'but gui' project can be found at:

  https://buthub.com/prati0100/but-gui.but/

BUT
---
Part of the linkbut:but[1] suite
