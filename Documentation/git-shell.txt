but-shell(1)
============

NAME
----
but-shell - Restricted login shell for Git-only SSH access


SYNOPSIS
--------
[verse]
'chsh' -s $(command -v but-shell) <user>
'but clone' <user>`@localhost:/path/to/repo.but`
'ssh' <user>`@localhost`

DESCRIPTION
-----------

This is a login shell for SSH accounts to provide restricted Git access.
It permits execution only of server-side Git commands implementing the
pull/push functionality, plus custom commands present in a subdirectory
named `but-shell-commands` in the user's home directory.

COMMANDS
--------

'but shell' accepts the following commands after the `-c` option:

'but receive-pack <argument>'::
'but upload-pack <argument>'::
'but upload-archive <argument>'::
	Call the corresponding server-side command to support
	the client's 'but push', 'but fetch', or 'but archive --remote'
	request.
'cvs server'::
	Imitate a CVS server.  See linkbut:but-cvsserver[1].

If a `~/but-shell-commands` directory is present, 'but shell' will
also handle other, custom commands by running
"`but-shell-commands/<command> <arguments>`" from the user's home
directory.

INTERACTIVE USE
---------------

By default, the commands above can be executed only with the `-c`
option; the shell is not interactive.

If a `~/but-shell-commands` directory is present, 'but shell'
can also be run interactively (with no arguments).  If a `help`
command is present in the `but-shell-commands` directory, it is
run to provide the user with an overview of allowed actions.  Then a
"but> " prompt is presented at which one can enter any of the
commands from the `but-shell-commands` directory, or `exit` to close
the connection.

Generally this mode is used as an administrative interface to allow
users to list repositories they have access to, create, delete, or
rename repositories, or change repository descriptions and
permissions.

If a `no-interactive-login` command exists, then it is run and the
interactive shell is aborted.

EXAMPLES
--------

To disable interactive logins, displaying a greeting instead:

----------------
$ chsh -s /usr/bin/but-shell
$ mkdir $HOME/but-shell-commands
$ cat >$HOME/but-shell-commands/no-interactive-login <<\EOF
#!/bin/sh
printf '%s\n' "Hi $USER! You've successfully authenticated, but I do not"
printf '%s\n' "provide interactive shell access."
exit 128
EOF
$ chmod +x $HOME/but-shell-commands/no-interactive-login
----------------

To enable but-cvsserver access (which should generally have the
`no-interactive-login` example above as a prerequisite, as creating
the but-shell-commands directory allows interactive logins):

----------------
$ cat >$HOME/but-shell-commands/cvs <<\EOF
if ! test $# = 1 && test "$1" = "server"
then
	echo >&2 "but-cvsserver only handles \"server\""
	exit 1
fi
exec but cvsserver server
EOF
$ chmod +x $HOME/but-shell-commands/cvs
----------------

SEE ALSO
--------
ssh(1),
linkbut:but-daemon[1],
contrib/but-shell-commands/README

BUT
---
Part of the linkbut:but[1] suite
