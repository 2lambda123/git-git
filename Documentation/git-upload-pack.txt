but-upload-pack(1)
==================

NAME
----
but-upload-pack - Send objects packed back to but-fetch-pack


SYNOPSIS
--------
[verse]
'but-upload-pack' [--[no-]strict] [--timeout=<n>] [--stateless-rpc]
		  [--advertise-refs] <directory>

DESCRIPTION
-----------
Invoked by 'but fetch-pack', learns what
objects the other side is missing, and sends them after packing.

This command is usually not invoked directly by the end user.
The UI for the protocol is on the 'but fetch-pack' side, and the
program pair is meant to be used to pull updates from a remote
repository.  For push operations, see 'but send-pack'.

OPTIONS
-------

--[no-]strict::
	Do not try <directory>/.but/ if <directory> is no Git directory.

--timeout=<n>::
	Interrupt transfer after <n> seconds of inactivity.

--stateless-rpc::
	Perform only a single read-write cycle with stdin and stdout.
	This fits with the HTTP POST request processing model where
	a program may read the request, write a response, and must exit.

--http-backend-info-refs::
	Used by linkbut:but-http-backend[1] to serve up
	`$GIT_URL/info/refs?service=but-upload-pack` requests. See
	"Smart Clients" in link:technical/http-protocol.html[the HTTP
	transfer protocols] documentation and "HTTP Transport" in
	link:technical/protocol-v2.html[the Git Wire Protocol, Version
	2] documentation. Also understood by
	linkbut:but-receive-pack[1].

<directory>::
	The repository to sync from.

ENVIRONMENT
-----------

`GIT_PROTOCOL`::
	Internal variable used for handshaking the wire protocol. Server
	admins may need to configure some transports to allow this
	variable to be passed. See the discussion in linkbut:but[1].

SEE ALSO
--------
linkbut:butnamespaces[7]

GIT
---
Part of the linkbut:but[1] suite
