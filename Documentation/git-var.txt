but-var(1)
==========

NAME
----
but-var - Show a Git logical variable


SYNOPSIS
--------
[verse]
'but var' ( -l | <variable> )

DESCRIPTION
-----------
Prints a Git logical variable.

OPTIONS
-------
-l::
	Cause the logical variables to be listed. In addition, all the
	variables of the Git configuration file .but/config are listed
	as well. (However, the configuration variables listing functionality
	is deprecated in favor of `but config -l`.)

EXAMPLES
--------
	$ but var BUT_AUTHOR_IDENT
	Eric W. Biederman <ebiederm@lnxi.com> 1121223278 -0600


VARIABLES
---------
BUT_AUTHOR_IDENT::
    The author of a piece of code.

BUT_CUMMITTER_IDENT::
    The person who put a piece of code into Git.

BUT_EDITOR::
    Text editor for use by Git commands.  The value is meant to be
    interpreted by the shell when it is used.  Examples: `~/bin/vi`,
    `$SOME_ENVIRONMENT_VARIABLE`, `"C:\Program Files\Vim\gvim.exe"
    --nofork`.  The order of preference is the `$BUT_EDITOR`
    environment variable, then `core.editor` configuration, then
    `$VISUAL`, then `$EDITOR`, and then the default chosen at compile
    time, which is usually 'vi'.
ifdef::but-default-editor[]
    The build you are using chose '{but-default-editor}' as the default.
endif::but-default-editor[]

BUT_PAGER::
    Text viewer for use by Git commands (e.g., 'less').  The value
    is meant to be interpreted by the shell.  The order of preference
    is the `$BUT_PAGER` environment variable, then `core.pager`
    configuration, then `$PAGER`, and then the default chosen at
    compile time (usually 'less').
ifdef::but-default-pager[]
    The build you are using chose '{but-default-pager}' as the default.
endif::but-default-pager[]

BUT_DEFAULT_BRANCH::
    The name of the first branch created in newly initialized repositories.

SEE ALSO
--------
linkbut:but-cummit-tree[1]
linkbut:but-tag[1]
linkbut:but-config[1]

BUT
---
Part of the linkbut:but[1] suite
