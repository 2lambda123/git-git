#!/bin/sh

GVF=BUT-VERSION-FILE
DEF_VER=0.21.BUTGUI

LF='
'

tree_search ()
{
	head=$1
	tree=$2
	for p in $(but rev-list --parents --max-count=1 $head 2>/dev/null)
	do
		test $tree = $(but rev-parse $p^{tree} 2>/dev/null) &&
		vn=$(but describe --abbrev=4 $p 2>/dev/null) &&
		case "$vn" in
		butgui-[0-9]*) echo $vn; break;;
		esac
	done
}

# Always use the tarball version file if found, just
# in case we are somehow contained in a larger but
# repository that doesn't actually track our state.
# (At least one package manager is doing this.)
#
# We may be a subproject, so try looking for the merge
# cummit that supplied this directory content if we are
# not at the toplevel.  We probably will always be the
# second parent in the cummit, but we shouldn't rely on
# that fact.
#
# If we are at the toplevel or the merge assumption fails
# try looking for a butgui-* tag.

if test -f version &&
   VN=$(cat version)
then
	: happy
elif prefix="$(but rev-parse --show-prefix 2>/dev/null)"
   test -n "$prefix" &&
   head=$(but rev-list --max-count=1 HEAD -- . 2>/dev/null) &&
   tree=$(but rev-parse --verify "HEAD:$prefix" 2>/dev/null) &&
   VN=$(tree_search $head $tree)
   case "$VN" in
   butgui-[0-9]*) : happy ;;
   *) (exit 1) ;;
   esac
then
	VN=$(echo "$VN" | sed -e 's/^butgui-//;s/-/./g');
elif VN=$(but describe --abbrev=4 HEAD 2>/dev/null) &&
   case "$VN" in
   butgui-[0-9]*) : happy ;;
   *) (exit 1) ;;
   esac
then
	VN=$(echo "$VN" | sed -e 's/^butgui-//;s/-/./g');
else
	VN="$DEF_VER"
fi

dirty=$(sh -c 'but diff-index --name-only HEAD' 2>/dev/null) || dirty=
case "$dirty" in
'')
	;;
*)
	VN="$VN-dirty" ;;
esac

if test -r $GVF
then
	VC=$(sed -e 's/^BUTGUI_VERSION = //' <$GVF)
else
	VC=unset
fi
test "$VN" = "$VC" || {
	echo >&2 "BUTGUI_VERSION = $VN"
	echo "BUTGUI_VERSION = $VN" >$GVF
}
