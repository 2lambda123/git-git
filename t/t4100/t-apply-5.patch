diff a/Documentation/but-rpull.txt b/Documentation/but-rpull.txt
--- a/Documentation/but-rpull.txt
+++ /dev/null
@@ -1,50 +0,0 @@
-but-rpull(1)
-============
-v0.1, May 2005
-
-NAME
-----
-but-rpull - Pulls from a remote repository over ssh connection
-
-
-
-SYNOPSIS
---------
-'but-rpull' [-c] [-t] [-a] [-d] [-v] [--recover] cummit-id url
-
-DESCRIPTION
------------
-Pulls from a remote repository over ssh connection, invoking but-rpush on
-the other end.
-
-OPTIONS
--------
--c::
-	Get the cummit objects.
--t::
-	Get trees associated with the cummit objects.
--a::
-	Get all the objects.
--d::
-	Do not check for delta base objects (use this option
-	only when you know the remote repository is not
-	deltified).
---recover::
-	Check dependency of deltified object more carefully than
-	usual, to recover after earlier pull that was interrupted.
--v::
-	Report what is downloaded.
-
-
-Author
-------
-Written by Linus Torvalds <torvalds@osdl.org>
-
-Documentation
---------------
-Documentation by David Greaves, Junio C Hamano and the but-list <but@vger.kernel.org>.
-
-GIT
----
-Part of the link:but.html[but] suite
-
diff a/Documentation/but-rpush.txt b/Documentation/but-rpush.txt
--- a/Documentation/but-rpush.txt
+++ /dev/null
@@ -1,30 +0,0 @@
-but-rpush(1)
-============
-v0.1, May 2005
-
-NAME
-----
-but-rpush - Helper "server-side" program used by but-rpull
-
-
-SYNOPSIS
---------
-'but-rpush'
-
-DESCRIPTION
------------
-Helper "server-side" program used by but-rpull.
-
-
-Author
-------
-Written by Linus Torvalds <torvalds@osdl.org>
-
-Documentation
---------------
-Documentation by David Greaves, Junio C Hamano and the but-list <but@vger.kernel.org>.
-
-GIT
----
-Part of the link:but.html[but] suite
-
diff a/Documentation/but-ssh-pull.txt b/Documentation/but-ssh-pull.txt
--- /dev/null
+++ b/Documentation/but-ssh-pull.txt
@@ -0,0 +1,50 @@
+but-ssh-pull(1)
+===============
+v0.1, May 2005
+
+NAME
+----
+but-ssh-pull - Pulls from a remote repository over ssh connection
+
+
+
+SYNOPSIS
+--------
+'but-ssh-pull' [-c] [-t] [-a] [-d] [-v] [--recover] cummit-id url
+
+DESCRIPTION
+-----------
+Pulls from a remote repository over ssh connection, invoking but-ssh-push
+on the other end.
+
+OPTIONS
+-------
+-c::
+	Get the cummit objects.
+-t::
+	Get trees associated with the cummit objects.
+-a::
+	Get all the objects.
+-d::
+	Do not check for delta base objects (use this option
+	only when you know the remote repository is not
+	deltified).
+--recover::
+	Check dependency of deltified object more carefully than
+	usual, to recover after earlier pull that was interrupted.
+-v::
+	Report what is downloaded.
+
+
+Author
+------
+Written by Linus Torvalds <torvalds@osdl.org>
+
+Documentation
+--------------
+Documentation by David Greaves, Junio C Hamano and the but-list <but@vger.kernel.org>.
+
+GIT
+---
+Part of the link:but.html[but] suite
+
diff a/Documentation/but-ssh-push.txt b/Documentation/but-ssh-push.txt
--- /dev/null
+++ b/Documentation/but-ssh-push.txt
@@ -0,0 +1,30 @@
+but-ssh-push(1)
+===============
+v0.1, May 2005
+
+NAME
+----
+but-ssh-push - Helper "server-side" program used by but-ssh-pull
+
+
+SYNOPSIS
+--------
+'but-ssh-push'
+
+DESCRIPTION
+-----------
+Helper "server-side" program used by but-ssh-pull.
+
+
+Author
+------
+Written by Linus Torvalds <torvalds@osdl.org>
+
+Documentation
+--------------
+Documentation by David Greaves, Junio C Hamano and the but-list <but@vger.kernel.org>.
+
+GIT
+---
+Part of the link:but.html[but] suite
+
diff a/Documentation/but.txt b/Documentation/but.txt
--- a/Documentation/but.txt
+++ b/Documentation/but.txt
@@ -148,7 +148,7 @@ link:but-resolve-script.html[but-resolve
 link:but-tag-script.html[but-tag-script]::
 	An example script to create a tag object signed with GPG
 
-link:but-rpull.html[but-rpull]::
+link:but-ssh-pull.html[but-ssh-pull]::
 	Pulls from a remote repository over ssh connection
 
 Interrogators:
@@ -156,8 +156,8 @@ Interrogators:
 link:but-diff-helper.html[but-diff-helper]::
 	Generates patch format output for but-diff-*
 
-link:but-rpush.html[but-rpush]::
-	Helper "server-side" program used by but-rpull
+link:but-ssh-push.html[but-ssh-push]::
+	Helper "server-side" program used by but-ssh-pull
 
 
 
diff a/Makefile b/Makefile
--- a/Makefile
+++ b/Makefile
@@ -30,7 +30,7 @@ PROG=   but-update-index but-diff-files
 	but-checkout-cache but-diff-tree but-rev-tree but-ls-files \
 	but-check-files but-ls-tree but-merge-base but-merge-cache \
 	but-unpack-file but-export but-diff-cache but-convert-cache \
-	but-http-pull but-rpush but-rpull but-rev-list but-mktag \
+	but-http-pull but-ssh-push but-ssh-pull but-rev-list but-mktag \
 	but-diff-helper but-tar-tree but-local-pull but-write-blob \
 	but-get-tar-cummit-id but-mkdelta but-apply but-stripspace
 
@@ -105,8 +105,8 @@ but-diff-cache: diff-cache.c
 but-convert-cache: convert-cache.c
 but-http-pull: http-pull.c pull.c
 but-local-pull: local-pull.c pull.c
-but-rpush: rsh.c
-but-rpull: rsh.c pull.c
+but-ssh-push: rsh.c
+but-ssh-pull: rsh.c pull.c
 but-rev-list: rev-list.c
 but-mktag: mktag.c
 but-diff-helper: diff-helper.c
diff a/rpull.c b/rpull.c
--- a/rpull.c
+++ /dev/null
@@ -1,83 +0,0 @@
-#include "cache.h"
-#include "cummit.h"
-#include "rsh.h"
-#include "pull.h"
-
-static int fd_in;
-static int fd_out;
-
-static unsigned char remote_version = 0;
-static unsigned char local_version = 1;
-
-int fetch(unsigned char *sha1)
-{
-	int ret;
-	signed char remote;
-	char type = 'o';
-	if (has_sha1_file(sha1))
-		return 0;
-	write(fd_out, &type, 1);
-	write(fd_out, sha1, 20);
-	if (read(fd_in, &remote, 1) < 1)
-		return -1;
-	if (remote < 0)
-		return remote;
-	ret = write_sha1_from_fd(sha1, fd_in);
-	if (!ret)
-		pull_say("got %s\n", sha1_to_hex(sha1));
-	return ret;
-}
-
-int get_version(void)
-{
-	char type = 'v';
-	write(fd_out, &type, 1);
-	write(fd_out, &local_version, 1);
-	if (read(fd_in, &remote_version, 1) < 1) {
-		return error("Couldn't read version from remote end");
-	}
-	return 0;
-}
-
-int main(int argc, char **argv)
-{
-	char *cummit_id;
-	char *url;
-	int arg = 1;
-
-	while (arg < argc && argv[arg][0] == '-') {
-		if (argv[arg][1] == 't') {
-			get_tree = 1;
-		} else if (argv[arg][1] == 'c') {
-			get_history = 1;
-		} else if (argv[arg][1] == 'd') {
-			get_delta = 0;
-		} else if (!strcmp(argv[arg], "--recover")) {
-			get_delta = 2;
-		} else if (argv[arg][1] == 'a') {
-			get_all = 1;
-			get_tree = 1;
-			get_history = 1;
-		} else if (argv[arg][1] == 'v') {
-			get_verbosely = 1;
-		}
-		arg++;
-	}
-	if (argc < arg + 2) {
-		usage("but-rpull [-c] [-t] [-a] [-v] [-d] [--recover] cummit-id url");
-		return 1;
-	}
-	cummit_id = argv[arg];
-	url = argv[arg + 1];
-
-	if (setup_connection(&fd_in, &fd_out, "but-rpush", url, arg, argv + 1))
-		return 1;
-
-	if (get_version())
-		return 1;
-
-	if (pull(cummit_id))
-		return 1;
-
-	return 0;
-}
diff a/rpush.c b/rpush.c
--- a/rpush.c
+++ /dev/null
@@ -1,104 +0,0 @@
-#include "cache.h"
-#include "rsh.h"
-#include <sys/socket.h>
-#include <errno.h>
-
-unsigned char local_version = 1;
-unsigned char remote_version = 0;
-
-int serve_object(int fd_in, int fd_out) {
-	ssize_t size;
-	int posn = 0;
-	char sha1[20];
-	unsigned long objsize;
-	void *buf;
-	signed char remote;
-	do {
-		size = read(fd_in, sha1 + posn, 20 - posn);
-		if (size < 0) {
-			perror("but-rpush: read ");
-			return -1;
-		}
-		if (!size)
-			return -1;
-		posn += size;
-	} while (posn < 20);
-	
-	/* fprintf(stderr, "Serving %s\n", sha1_to_hex(sha1)); */
-	remote = 0;
-	
-	buf = map_sha1_file(sha1, &objsize);
-	
-	if (!buf) {
-		fprintf(stderr, "but-rpush: could not find %s\n",
-			sha1_to_hex(sha1));
-		remote = -1;
-	}
-	
-	write(fd_out, &remote, 1);
-	
-	if (remote < 0)
-		return 0;
-	
-	posn = 0;
-	do {
-		size = write(fd_out, buf + posn, objsize - posn);
-		if (size <= 0) {
-			if (!size) {
-				fprintf(stderr, "but-rpush: write closed");
-			} else {
-				perror("but-rpush: write ");
-			}
-			return -1;
-		}
-		posn += size;
-	} while (posn < objsize);
-	return 0;
-}
-
-int serve_version(int fd_in, int fd_out)
-{
-	if (read(fd_in, &remote_version, 1) < 1)
-		return -1;
-	write(fd_out, &local_version, 1);
-	return 0;
-}
-
-void service(int fd_in, int fd_out) {
-	char type;
-	int retval;
-	do {
-		retval = read(fd_in, &type, 1);
-		if (retval < 1) {
-			if (retval < 0)
-				perror("rpush: read ");
-			return;
-		}
-		if (type == 'v' && serve_version(fd_in, fd_out))
-			return;
-		if (type == 'o' && serve_object(fd_in, fd_out))
-			return;
-	} while (1);
-}
-
-int main(int argc, char **argv)
-{
-	int arg = 1;
-        char *cummit_id;
-        char *url;
-	int fd_in, fd_out;
-	while (arg < argc && argv[arg][0] == '-') {
-                arg++;
-        }
-        if (argc < arg + 2) {
-		usage("but-rpush [-c] [-t] [-a] cummit-id url");
-                return 1;
-        }
-	cummit_id = argv[arg];
-	url = argv[arg + 1];
-	if (setup_connection(&fd_in, &fd_out, "but-rpull", url, arg, argv + 1))
-		return 1;
-
-	service(fd_in, fd_out);
-	return 0;
-}
diff a/ssh-pull.c b/ssh-pull.c
--- /dev/null
+++ b/ssh-pull.c
@@ -0,0 +1,83 @@
+#include "cache.h"
+#include "cummit.h"
+#include "rsh.h"
+#include "pull.h"
+
+static int fd_in;
+static int fd_out;
+
+static unsigned char remote_version = 0;
+static unsigned char local_version = 1;
+
+int fetch(unsigned char *sha1)
+{
+	int ret;
+	signed char remote;
+	char type = 'o';
+	if (has_sha1_file(sha1))
+		return 0;
+	write(fd_out, &type, 1);
+	write(fd_out, sha1, 20);
+	if (read(fd_in, &remote, 1) < 1)
+		return -1;
+	if (remote < 0)
+		return remote;
+	ret = write_sha1_from_fd(sha1, fd_in);
+	if (!ret)
+		pull_say("got %s\n", sha1_to_hex(sha1));
+	return ret;
+}
+
+int get_version(void)
+{
+	char type = 'v';
+	write(fd_out, &type, 1);
+	write(fd_out, &local_version, 1);
+	if (read(fd_in, &remote_version, 1) < 1) {
+		return error("Couldn't read version from remote end");
+	}
+	return 0;
+}
+
+int main(int argc, char **argv)
+{
+	char *cummit_id;
+	char *url;
+	int arg = 1;
+
+	while (arg < argc && argv[arg][0] == '-') {
+		if (argv[arg][1] == 't') {
+			get_tree = 1;
+		} else if (argv[arg][1] == 'c') {
+			get_history = 1;
+		} else if (argv[arg][1] == 'd') {
+			get_delta = 0;
+		} else if (!strcmp(argv[arg], "--recover")) {
+			get_delta = 2;
+		} else if (argv[arg][1] == 'a') {
+			get_all = 1;
+			get_tree = 1;
+			get_history = 1;
+		} else if (argv[arg][1] == 'v') {
+			get_verbosely = 1;
+		}
+		arg++;
+	}
+	if (argc < arg + 2) {
+		usage("but-ssh-pull [-c] [-t] [-a] [-v] [-d] [--recover] cummit-id url");
+		return 1;
+	}
+	cummit_id = argv[arg];
+	url = argv[arg + 1];
+
+	if (setup_connection(&fd_in, &fd_out, "but-ssh-push", url, arg, argv + 1))
+		return 1;
+
+	if (get_version())
+		return 1;
+
+	if (pull(cummit_id))
+		return 1;
+
+	return 0;
+}
diff a/ssh-push.c b/ssh-push.c
--- /dev/null
+++ b/ssh-push.c
@@ -0,0 +1,104 @@
+#include "cache.h"
+#include "rsh.h"
+#include <sys/socket.h>
+#include <errno.h>
+
+unsigned char local_version = 1;
+unsigned char remote_version = 0;
+
+int serve_object(int fd_in, int fd_out) {
+	ssize_t size;
+	int posn = 0;
+	char sha1[20];
+	unsigned long objsize;
+	void *buf;
+	signed char remote;
+	do {
+		size = read(fd_in, sha1 + posn, 20 - posn);
+		if (size < 0) {
+			perror("but-ssh-push: read ");
+			return -1;
+		}
+		if (!size)
+			return -1;
+		posn += size;
+	} while (posn < 20);
+	
+	/* fprintf(stderr, "Serving %s\n", sha1_to_hex(sha1)); */
+	remote = 0;
+	
+	buf = map_sha1_file(sha1, &objsize);
+	
+	if (!buf) {
+		fprintf(stderr, "but-ssh-push: could not find %s\n",
+			sha1_to_hex(sha1));
+		remote = -1;
+	}
+	
+	write(fd_out, &remote, 1);
+	
+	if (remote < 0)
+		return 0;
+	
+	posn = 0;
+	do {
+		size = write(fd_out, buf + posn, objsize - posn);
+		if (size <= 0) {
+			if (!size) {
+				fprintf(stderr, "but-ssh-push: write closed");
+			} else {
+				perror("but-ssh-push: write ");
+			}
+			return -1;
+		}
+		posn += size;
+	} while (posn < objsize);
+	return 0;
+}
+
+int serve_version(int fd_in, int fd_out)
+{
+	if (read(fd_in, &remote_version, 1) < 1)
+		return -1;
+	write(fd_out, &local_version, 1);
+	return 0;
+}
+
+void service(int fd_in, int fd_out) {
+	char type;
+	int retval;
+	do {
+		retval = read(fd_in, &type, 1);
+		if (retval < 1) {
+			if (retval < 0)
+				perror("but-ssh-push: read ");
+			return;
+		}
+		if (type == 'v' && serve_version(fd_in, fd_out))
+			return;
+		if (type == 'o' && serve_object(fd_in, fd_out))
+			return;
+	} while (1);
+}
+
+int main(int argc, char **argv)
+{
+	int arg = 1;
+        char *cummit_id;
+        char *url;
+	int fd_in, fd_out;
+	while (arg < argc && argv[arg][0] == '-') {
+                arg++;
+        }
+        if (argc < arg + 2) {
+		usage("but-ssh-push [-c] [-t] [-a] cummit-id url");
+                return 1;
+        }
+	cummit_id = argv[arg];
+	url = argv[arg + 1];
+	if (setup_connection(&fd_in, &fd_out, "but-ssh-pull", url, arg, argv + 1))
+		return 1;
+
+	service(fd_in, fd_out);
+	return 0;
+}
